plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.team14'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Password Encoder
    implementation 'at.favre.lib:bcrypt:0.10.2'

    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT API: 토큰 생성, 파싱, 서명 등을 제공하는 핵심 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

    implementation 'org.springframework.security:spring-security-oauth2-jose'

    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    // JSON 처리 라이브러리: Jackson을 사용하여 JWT Payload의 JSON 데이터를 직렬화/역직렬화
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'


}

tasks.named('test') {
    useJUnitPlatform()
}
